{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionTypes.js","redux/ActionCreators.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","reportWebVitals.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","src","image","alt","name","designation","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","RednerMenuItem","onClick","to","id","width","Menu","menu","dishes","map","active","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","this","resetFeedbackForm","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","model","onSubmit","htmlFor","md","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","defaultValue","value","textarea","rows","type","color","Component","About","leaders","RenderLeader","tag","left","middle","object","body","heading","RenderLeaders","list","title","RenderDish","top","RenderComments","comments","postComment","dishId","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","CommentForm","state","isModalOpen","toggleModal","setState","rating","outline","isOpen","toggle","for","resize","DishDetail","Header","toggleNav","isNavOpen","handleLogin","event","alert","username","password","remember","checked","preventDefault","Fragment","dark","expand","href","height","navbar","innerRef","input","Footer","ADD_COMMENT","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","ADD_COMMENTS","COMMENTS_FAILED","PROMOS_LOADING","ADD_PROMOS","PROMOS_FAILED","LEADERS_LOADING","ADD_LEADERS","LEADERS_FAILED","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","ActionTypes","payload","addComment","catch","console","log","dishesFailed","errmess","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","selectedDish","fetchDishes","fetchComments","fetchPromos","fetchLeaders","classNames","timeout","location","path","component","filter","featured","dishErrMess","promotions","promo","exact","match","parseInt","params","commentsErrMess","key","withRouter","connect","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26854292.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Loading = () => {\n    return(\n        <div className=\"col-12\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary \"></span>\n            <p>Loading . . .</p>\n        </div>\n    );\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\nimport { Card, CardImg, CardText, CardBody,\n    CardTitle, CardSubtitle} from 'reactstrap';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform } from 'react-animation-components';\n\n\n\nfunction RenderCard({item, isLoading, errMess}) {\n\n      if (isLoading) {\n        return(\n                <Loading />\n        );\n    }\n    else if (errMess) {\n        return(\n            <h4>{errMess}</h4>\n        );\n    }\n    else \n        return(\n            <FadeTransform\n                in\n                transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }}>\n                <Card>\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\n                    <CardBody>\n                    <CardTitle>{item.name}</CardTitle>\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\n                    <CardText>{item.description}</CardText>\n                    </CardBody>\n                </Card>\n            </FadeTransform>\n       );\n\n}\n\nfunction Home(props) {\n    return(\n        <div className=\"container\">\n            <div className=\"row align-items-start\">\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard \n                        item={props.dish} \n                        isLoading={props.dishesLoading} \n                        errMess={props.dishesErrMess}  \n                    />\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                <RenderCard item={props.promotion} \n                isLoading={props.promoLoading} \n                errMess={props.promoErrMess} />\n\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.leader}\n                    isLoading={props.leaderLoading}\n                    errMess={props.leaderErrMess}\n                     />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import React from \"react\";\nimport { Card, CardImg, CardImgOverlay,\n    CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\n\n    function RednerMenuItem({dish, onClick}) {\n        return(\n            <Card>\n                <Link to={`/menu/${dish.id}`} >\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\n                    <CardImgOverlay>\n                        <CardTitle>{dish.name}</CardTitle>\n                    </CardImgOverlay>\n                </Link>\n            </Card>\n        );\n    }\n\n    const Menu = (props) => {\n\n        const menu = props.dishes.dishes.map((dish) =>{\n\n            return(\n                <div key={dish.id} className=\"col-12 col-md-5 m-1\">\n                    <RednerMenuItem dish={dish}/>\n                </div>\n                )\n            });\n\n            if (props.dishes.isLoading) {\n                return(\n                    <div className=\"container\">\n                        <div className=\"row\">            \n                            <Loading />\n                        </div>\n                    </div>\n            );\n        }\n        else if (props.dishes.errMess) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\"> \n                        <div className=\"col-12\">\n                            <h4>{props.dishes.errMess}</h4>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n        else\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>Menu</BreadcrumbItem>\n                        </Breadcrumb>\n                        <div className=\"col-12\">\n                            <h3>Menu</h3>\n                            <hr />\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        {menu}\n                    </div>\n                </div>\n            );\n    }\n\nexport default Menu;","import React, { Component } from 'react';\nimport { Button, Row, Col, Label } from 'reactstrap';\nimport { Control, Form, Errors } from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n    handleSubmit(values) {\n        // console.log('Current State is: ' + JSON.stringify(values));\n        // alert('Current State is: ' + JSON.stringify(values));\n        // this.props.resetFeedbackForm();\n        this.props.resetFeedbackForm();\n        this.props.postFeedback(\n          values.firstname,\n          values.lastname,\n          values.telnum,\n          values.email,\n          values.agree,\n          values.contactType,\n          values.message\n        );\n    }\n\n    render() {\n        return(\n            <div className=\"row row-content\">\n            <div className=\"col-12\">\n               <h3>Send us your Feedback</h3>\n            </div>\n             <div className=\"col-12 col-md-9\">\n             <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n                 <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                        placeholder=\"Tel. Number\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".telnum\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, validEmail\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid Email Address'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 6, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\n                                                className=\"form-check-input\"\n                                                 /> {' '}\n                                                <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{size: 3, offset: 1}}>\n                                    <Control.select model=\".contactType\" name=\"contactType\" defaultValue=\"Tel\"\n                                        className=\"form-control\">\n                                        <option value=\"Tel\">Tel.</option>\n                                        <option value=\"Tel\">Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                        rows=\"12\"\n                                        className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size:10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                    Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                </Form>\n             </div>\n        </div>\n        );\n    }\n}\n\nexport default Contact;\n","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { Fade, Stagger } from 'react-animation-components';\n\nfunction About(props) {\n\n    const leaders = props.leaders.leaders.map(leader => {\n        return (\n            <RenderLeader leader={leader} />\n        );\n    });\n\n    function RenderLeader({ leader }) {\n        return (\n            <Fade in>\n                <Media tag=\"li\" key={leader.id} className=\"col-12 mt-5\" >\n                    <Media left middle>\n                        <Media object src={baseUrl + leader.image} alt={leader.name} />\n                    </Media>\n                    <Media body className=\"ml-5\">\n                        <Media heading>{leader.name}</Media>\n                        <p>{leader.designation}</p>\n                        <p>{leader.description}</p>\n                    </Media>\n                </Media>\n            </Fade>\n        );\n    }\n\n    function RenderLeaders() {\n\n        if (props.leaders.isLoading) {\n            return <Loading />;\n        }\n        else if (props.leaders.errMess) {\n            return (\n                <h4>{props.leaders.errMess}</h4>\n            );\n        }\n        else return (\n            <Media list>\n                <Stagger in>\n                    {leaders}\n                </Stagger>\n            </Media>\n        );\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                    <RenderLeaders />\n                </div>\n            </div>\n        </div>\n    );\n}\nexport default About; ","import React, { Component } from 'react';\nimport { Card, CardImg, CardText, CardBody,\n    CardTitle, Button, Breadcrumb, BreadcrumbItem, Modal, ModalHeader, ModalBody, Label, Row, Col } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade } from 'react-animation-components';\n\n\nfunction RenderDish({dish}) {\n        return(\n            <div className=\"col-12 col-md-5 m-1\">\n                <FadeTransform\n                    in\n                    transformProps={{\n                        exitTransform: 'scale(0.5) translateY(-50%)'\n                    }}>\n                <Card>\n                    <CardImg top src={baseUrl + dish.image} alt={dish.name} />\n                    <CardBody>\n                        <CardTitle>{dish.name}</CardTitle>\n                        <CardText>{dish.description}</CardText>\n                    </CardBody>\n                </Card>\n                </FadeTransform>\n            </div>\n        )\n    }\n\n    // Render comments function\nfunction RenderComments({comments, postComment,dishId}){\n    if (comments != null) {\n\n        let list = comments.map((comments)=>{\n\n            return(\n                <Fade in>\n\n                    <li key={comments.id} >\n                        <div>\n                            <p>{comments.comment}</p>\n                            <p>--{comments.author},\n                            {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comments.date)))}</p>\n                        </div>\n                    </li>\n                </Fade>\n            )\n        })\n\n\n        return(\n                <div className=\"col-12 col-md-5 m-1\">\n                    <h4>Comments</h4>\n                    <ul className=\"list-unstyled\">\n                        {list}\n                    </ul>\n                    <CommentForm \n                        dishId={dishId} \n                        postComment={postComment}>\n                    </CommentForm>\n                </div>\n        )\n\n    }\n    else{\n        return(\n            <div></div>\n        )\n    }\n}\n\n// ..\nconst DishDetail = (props) => {\n    if (props.isLoading) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">            \n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (props.errMess) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">            \n                    <h4>{props.errMess}</h4>\n                </div>\n            </div>\n        );\n    }\n    else if (props.dish != null) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem>\n                            <Link to=\"/menu\">Menu</Link>\n                        </BreadcrumbItem>\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>{props.dish.name}</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">\n                        <RenderDish dish={props.dish} />\n                        <RenderComments comments={props.comments} \n                         postComment={props.postComment}\n                         dishId= {props.dish.id}\n                        />\n                </div>\n            </div>\n        )\n    }else{\n        return(\n            <div></div>\n        )\n    }\n\n}\n\n// validators\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\n\nclass CommentForm extends Component {\nconstructor(props) {\n    super(props);\n\n    this.state = {\n        isModalOpen: false\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n}\n\n// toggle model\ntoggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n}\n\n// handle submit\nhandleSubmit(values) {\n\n    this.toggleModal();\n    this.props.postComment(this.props.dishId, values.rating, values.author,values.comment);\n    // console.log('Current State is: ' + JSON.stringify(values));\n    // alert('Current State is: ' + JSON.stringify(values));\n}\n\nrender() {\n    return(\n        <div>\n            <Button outline onClick={this.toggleModal}><span className=\"fa fa-edit fa-lg\"></span>Submit Comment</Button>\n\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n        <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n        <ModalBody>\n            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                <Row  className=\"form-group\">\n                    <Label for=\"rating\" md={12}>Rating</Label>\n                    <Col  md={12}>\n                        <Control.select model=\".rating\" id=\"rating\" name=\"rating\" className=\"form-control\" >\n                            <option>1</option>\n                            <option>2</option>\n                            <option>3</option>\n                            <option>4</option>\n                            <option>5</option>\n                        </Control.select>\n                    </Col>\n                </Row>\n                <Row className=\"form-group\">\n                    <Label htmlFor=\"author\"  md={12}>Your Name</Label>\n                    <Col  md={12}>\n                        <Control.text model=\".author\" id=\"author\" name=\"author\" placeholder=\"Author\" className=\"form-control\" validators={{ required, minLength: minLength(2), maxLength: maxLength(15) }} />\n                        <Errors className=\"text-danger\" model=\".author\" show=\"touched\" messages={{ required: 'Required', minLength: 'Must be greater than 2 characters', maxLength: 'Must be 15 charaters or less' }} />\n                    </Col>\n                </Row>\n\n                <Row className=\"form-group\">\n                    <Label htmlFor=\"feedback\"  md={12}>Your feedback.</Label>\n                    <Col  md={12}>\n                        <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\" resize=\"none\" rows=\"6\" className=\"form-control\" validators={{ required }} />\n                        <Errors className=\"text-danger\" model=\".comment\" show=\"touched\" messages={{ required: 'Required' }} />\n                    </Col>\n                </Row>\n\n                <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\n            </LocalForm>\n        </ModalBody>\n    </Modal>\n\n        </div>\n    )\n}\n}\n\nexport default DishDetail\n","import React, { Component } from 'react';\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron,\n         Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input ,\n         } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n    \n        this.toggleNav = this.toggleNav.bind(this);\n        this.state = {\n          isNavOpen: false,\n          isModalOpen: false\n        };\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n\n      }\n\n      toggleNav() {\n        this.setState({\n          isNavOpen: !this.state.isNavOpen\n        });\n      }\n\n      toggleModal(){\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n          });\n      }\n\n      handleLogin(event) {\n          this.toggleModal();\n          alert(\"Username: \" + this.username.value + 'Password: ' + this.password.value + \n          'Remember: ' + this.remember.checked );\n\n          event.preventDefault();\n      }\n\n    render() {\n        return(\n            <React.Fragment>\n                <Navbar dark expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                            <NavItem>\n                                <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\n                            </NavItem>\n                            </Nav>\n                            <Nav className=\"ml-auto\" navbar>\n                                    <NavItem >\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\n                                    </NavItem>\n                            </Nav>\n                        </Collapse>\n                    </div>\n                </Navbar>\n                <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n                                <h1>Ristorante con Fusion</h1>\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n\n                <Modal isOpen = {this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal} >Login</ModalHeader>\n                    <ModalBody>\n                            <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\"\n                                    innerRef={(input) => this.username = input} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                    innerRef={(input) => this.password = input}  />\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" name=\"remember\"\n                                    innerRef={(input) => this.remember = input}  />\n                                    Remember me\n                                </Label>\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                            </Form>\n                        \n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Footer(props) {\n    return(\n    <div className=\"footer\">\n        <div className=\"container\">\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-4 offset-1 col-sm-2\">\n                    <h5>Links</h5>\n                    <ul className=\"list-unstyled\">\n                        <li><Link to=\"/home\">Home</Link></li>\n                        <li><Link to=\"/aboutus\">About Us</Link></li>\n                        <li><Link to=\"/menu\">Menu</Link></li>\n                        <li><Link to=\"/contactus\">Contact Us</Link></li>\n                    </ul>\n                </div>\n                <div className=\"col-7 col-sm-5\">\n                    <h5>Our Address</h5>\n                    <address>\n\t\t              121, Clear Water Bay Road<br />\n\t\t              Clear Water Bay, Kowloon<br />\n\t\t              HONG KONG<br />\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\n                         confusion@food.net</a>\n                    </address>\n                </div>\n                <div className=\"col-12 col-sm-4 align-self-center\">\n                    <div className=\"text-center\">\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-auto\">\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\n                </div>\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default Footer;","export const ADD_COMMENT = 'ADD_COMMENT';\nexport const DISHES_LOADING = 'DISHES_LOADING';\nexport const DISHES_FAILED = 'DISHES_FAILED';\nexport const ADD_DISHES = 'ADD_DISHES';\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\nexport const ADD_PROMOS = 'ADD_PROMOS';\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\nexport const LEADERS_LOADING = \"LEADERS_LOADING\";\nexport const ADD_LEADERS = \"ADD_LEADERS\";\nexport const LEADERS_FAILED = \"LEADERS_FAILED\";\n\n","import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\n\nexport const addComment = ( comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n\n    const newComment = {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    };\n    newComment.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'comments', {\n        method: 'POST' ,\n        body: JSON.stringify(newComment),\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        credentials: 'same-origin'\n\n    })\n\n        .then(response => {\n            if (response.ok) {\n              return response;\n            } else {\n              var error = new Error('Error ' + response.status + ': ' + response.statusText);\n              error.response = response;\n              throw error;\n            }\n          },\n          error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n          })\n\n          .then(response => response.json())\n          .then(response => dispatch(addComment(response)))\n          .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\n\n}\n\nexport const fetchDishes = () => (dispatch) => {\n\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl + 'dishes')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(dishes => dispatch(addDishes(dishes)))\n    .catch(error => dispatch(dishesFailed(error.message)));\n}\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\nexport const fetchComments = () => (dispatch) => {    \n    return fetch(baseUrl + 'comments')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(comments => dispatch(addComments(comments)))\n    .catch(error => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\n// promos\n\nexport const fetchPromos = () => (dispatch) => {\n    \n    dispatch(promosLoading());\n\n    return fetch(baseUrl + 'promotions')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(promos => dispatch(addPromos(promos)))\n    .catch(error => dispatch(promosFailed(error.message)));\n}\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\nexport const fetchLeaders = () => dispatch => {\n    dispatch(leadersLoading());\n  \n    return fetch(baseUrl + \"leaders\")\n      .then(\n        response => {\n          if (response.ok) {\n            return response;\n          } else {\n            var error = new Error(\n              \"Error \" + response.status + \": \" + response.statusText\n            );\n            error.response = response;\n            throw error;\n          }\n        },\n        error => {\n          var errmess = new Error(error.message);\n          throw errmess;\n        }\n      )\n      .then(response => response.json())\n      .then(leaders => dispatch(addLeaders(leaders)))\n      .catch(error => dispatch(leadersFailed(error.message)));\n  };\n  export const leadersLoading = () => ({\n    type: ActionTypes.LEADERS_LOADING\n  });\n  \n  export const leadersFailed = errmess => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n  });\n  \n  export const addLeaders = leaders => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n  });\n  \n  export const postFeedback = (\n    firstname,\n    lastname,\n    telnum,\n    email,\n    agree,\n    contactType,\n    message\n  ) => dispatch => {\n    const newFeedback = {\n      firstname: firstname,\n      lastname: lastname,\n      telnum: telnum,\n      email: email,\n      agree: agree,\n      contactType: contactType,\n      message: message\n    };\n  \n    return fetch(baseUrl + \"feedback\", {\n      method: \"POST\",\n      body: JSON.stringify(newFeedback),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"same-origin\"\n    })\n      .then(\n        response => {\n          if (response.ok) {\n            return response;\n          } else {\n            var error = new Error(\n              \"Error \" + response.status + \": \" + response.statusText\n            );\n            error.response = response;\n            throw error;\n          }\n        },\n        error => {\n          throw error;\n        }\n      )\n      .then(response => response.json())\n      .then(response =>\n        alert(\"Thank you for your feedback!\" + JSON.stringify(response))\n      )\n      .catch(error => {\n        console.log(\"post feedbacks\", error.message);\n        alert(\"Your feedback could not be posted\\nError: \" + error.message);\n      });\n  };","import React, { Component } from 'react';\nimport Home from './HomeComponent';\nimport Menu from './MenuComponent';\nimport Contact from './ContactComponent';\nimport About from './AboutComponent';\nimport DishDetail from './DishdetailComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { actions } from 'react-redux-form';\nimport { postComment, fetchDishes, fetchComments,\n         fetchPromos, fetchLeaders } from '../redux/ActionCreators';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nconst mapStateToProps = state => {\n    return {\n      dishes: state.dishes,\n      comments: state.comments,\n      promotions: state.promotions,\n      leaders: state.leaders\n    }\n  }\n\n  const mapDispatchToProps = dispatch => ({\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\n    fetchDishes: () => { dispatch(fetchDishes())},\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\n    fetchComments: () => dispatch(fetchComments()),\n    fetchLeaders: () => dispatch(fetchLeaders()),\n    fetchPromos: () => dispatch(fetchPromos())\n  });\n  \n\nclass Main extends Component {\n\n  onDishSelect(dishId) {\n    this.setState({ selectedDish: dishId});\n  }\n\n  componentDidMount() {\n    this.props.fetchDishes();\n    this.props.fetchComments();\n    this.props.fetchPromos();\n    this.props.fetchLeaders(); \n  }\n\n  render() {\n\n    const HomePage = () => {\n      return(\n        <Home \n        dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\n        dishesLoading={this.props.dishes.isLoading}\n        dishErrMess={this.props.dishes.errMess}\n        promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\n        promoLoading={this.props.promotions.isLoading}\n        promoErrMess={this.props.promotions.errMess}\n        // fetch \n        leader={\n          this.props.leaders.leaders.filter(leader => leader.featured)[0]\n        }\n        leaderLoading={this.props.leaders.isLoading}\n        leaderErrMess={this.props.leaders.errMess}\n    />\n      );\n    }\n\n    const DishWithId = ({match}) => {\n      return(\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\n        isLoading={this.props.dishes.isLoading}\n        errMess={this.props.dishes.errMess}\n        comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\n        commentsErrMess={this.props.comments.errMess}\n        postComment={this.props.postComment}\n      />\n      );\n    };\n\n    return (\n      <div>\n        <Header />\n\n        <TransitionGroup>\n            <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\n              <Switch location={this.props.location}>\n                  <Route path='/home' component={HomePage} />\n                  <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders} />} />\n                  <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\n                  <Route path='/menu/:dishId' component={DishWithId} />\n                  <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} />} />\n                  <Redirect to=\"/home\" />\n              </Switch>\n            </CSSTransition>\n          </TransitionGroup>\n\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\n","import * as ActionTypes from './ActionTypes';\n\nexport const Dishes = (state = { \n    isLoading: true,\n    errMess: null,\n    dishes:[]}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_DISHES:\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\n\n        case ActionTypes.DISHES_LOADING:\n            return {...state, isLoading: true, errMess: null, dishes: []}\n\n        case ActionTypes.DISHES_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        default:\n            return state;\n    }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_COMMENTS:\n      return {...state, errMess: null, comments: action.payload};\n\n    case ActionTypes.COMMENTS_FAILED:\n      return {...state, errMess: action.payload};\n\n    case ActionTypes.ADD_COMMENT:\n        var comment = action.payload;\n        comment.id = state.comments.length;\n        comment.date = new Date().toISOString();\n        return { ...state, comments: state.comments.concat(comment)};\n\n    default:\n      return state;\n  }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Promotions = (state  = { isLoading: true,\n                                        errMess: null,\n                                        promotions:[]}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_PROMOS:\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\n\n        case ActionTypes.PROMOS_LOADING:\n            return {...state, isLoading: true, errMess: null, promotions: []}\n\n        case ActionTypes.PROMOS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        default:\n          return state;\n      }\n};","import * as ActionTypes from \"./ActionTypes\";\n\nexport const Leaders = (\n    state = {\n      isLoading: true,\n      errMess: null,\n      leaders: []\n    },\n    action\n  ) => {\n    switch (action.type) {\n      case ActionTypes.ADD_LEADERS:\n        return {\n          ...state,\n          isLoading: false,\n          errMess: null,\n          leaders: action.payload\n        };\n  \n      case ActionTypes.LEADERS_LOADING:\n        return { ...state, isLoading: true, errMess: null, leaders: [] };\n  \n      case ActionTypes.LEADERS_FAILED:\n        return { ...state, isLoading: false, errMess: action.payload };\n  \n      default:\n        return state;\n    }\n  };","export const InitialFeedback = {\n    firstname: '',\n    lastname: '',\n    telnum: '',\n    email: '',\n    agree: false,\n    contactType: 'Tel.',\n    message: ''\n};","import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore'\n\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store} >\n        <BrowserRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\nimport { createForms } from 'react-redux-form';\nimport { Dishes } from './dishes';\nimport { Comments } from './comments';\nimport { Promotions } from './promotions';\nimport { Leaders } from './leaders';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { InitialFeedback } from './forms';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            dishes: Dishes,\n            comments: Comments,\n            promotions: Promotions,\n            leaders: Leaders,\n            ...createForms({\n                feedback: InitialFeedback\n            })\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}